{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","Header","data","title","paragraph","Features","map","d","i","icon","text","Contact","validateText","test","length","messages","useState","idx","updateIter","message","updateMessage","char","updateChar","isActive","setIsActive","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","newIdx","newChar","slice","style","color","onMouseEnter","onMouseLeave","facebook","twitter","youtube","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.a117f772.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            Penguins Software\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#features' className='page-scroll'>\n                Features\n              </a>\n            </li>\n            {/* <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li>\n            <li>\n              <a href='#services' className='page-scroll'>\n                Services\n              </a>\n            </li> */}\n            {/* <li>\n              <a href='#portfolio' className='page-scroll'>\n                Gallery\n              </a>\n            </li>\n            <li>\n              <a href='#testimonials' className='page-scroll'>\n                Testimonials\n              </a>\n            </li>\n            <li>\n              <a href='#team' className='page-scroll'>\n                Team\n              </a>\n            </li> */}\n            <li>\n              <a href='#contact' className='page-scroll'>\n                Contact\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","export const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>Features</h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-sm-8 col-md-4'>\n                  {' '}\n                  <i className={d.icon}></i>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : 'Loading...'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect, useRef } from 'react'\n// import emailjs from 'emailjs-com'\n\n\n\n// const initialState = {\n//   name: '',\n//   email: '',\n//   message: '',\n// }\nexport const Contact = (props) => {\n  // const [{ name, email, message }, setState] = useState(initialState)\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target\n  //   setState((prevState) => ({ ...prevState, [name]: value }))\n  // }\n  // const clearState = () => setState({ ...initialState })\n\n\n  const validateText = (text) => {\n    // NOTE: Passes RFC 5322 but not tested on google's standard.\n    // eslint-disable-next-line no-useless-escape\n    const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n    return re.test(text) || text.length === 0;\n  };\n  \n  const messages = [\n    'hi',\n    'hello',\n    'hola',\n    'you-can-email-me-at-literally-anything! Really',\n    'well, not anything. But most things',\n    'like-this',\n    'or-this',\n    'but not this :(  ',\n    'you.can.also.email.me.with.specific.topics.like',\n    'just-saying-hi',\n    'please-work-for-us',\n    'help',\n    'admin',\n    'or-I-really-like-your-website',\n    'I\\'ll-stop-distracting-you-now',\n    'thanks',\n  ];\n\n  const useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n  \n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n  \n    useEffect(() => {\n      if (delay) {\n        const id = setInterval(() => {\n          savedCallback.current();\n        }, delay);\n        return () => clearInterval(id);\n      }\n      return () => {}; // pass linter\n    }, [delay]);\n  };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   console.log(name, email, message)\n  //   emailjs\n  //     .sendForm(\n  //       'YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID'\n  //     )\n  //     .then(\n  //       (result) => {\n  //         console.log(result.text)\n  //         clearState()\n  //       },\n  //       (error) => {\n  //         console.log(error.text)\n  //       }\n  //     )\n  // }\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault()\n  //   const sgMail = require('@sendgrid/mail')\n  //   console.log(process.env.REACT_APP_SENDGRID_API_KEY)\n  //   sgMail.setApiKey(process.env.REACT_APP_SENDGRID_API_KEY)\n  //   const msg = {\n  //     to: 'inquiry@penguinssoftware.com', // Change to your recipient\n  //     from: 'no-reply@penguinssoftware.com', // Change to your verified sender\n  //     subject: 'Sending with SendGrid is Fun',\n  //     text: 'and easy to do anywhere, even with Node.js',\n  //     html: '<strong>and easy to do anywhere, even with Node.js</strong>',\n  //   }\n  //   sgMail\n  //     .send(msg)\n  //     .then(() => {\n  //       console.log('Email sent')\n  //     })\n  //     .catch((error) => {\n  //       console.error(error)\n  //     })\n  //   }\n\n\n    const hold = 50; // ticks to wait after message is complete before rendering next message\n    const delay = 50; // tick length in mS\n  \n    const [idx, updateIter] = useState(0); // points to current message\n    const [message, updateMessage] = useState(messages[idx]);\n    const [char, updateChar] = useState(messages[idx].length); // points to current char\n    const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n  \n    useInterval(() => {\n      let newIdx = idx;\n      let newChar = char;\n      if (char - hold >= messages[idx].length) {\n        newIdx += 1;\n        newChar = 0;\n      }\n      if (newIdx === messages.length) {\n        setIsActive(false);\n      } else {\n        updateMessage(messages[newIdx].slice(0, newChar));\n        updateIter(newIdx);\n        updateChar(newChar + 1);\n      }\n    }, isActive ? delay : null);\n\n\n  return (\n    <div>\n      <div id='contact'>\n        <div className='container'>\n          {/* <div className='col-md-8'>\n            <div className='row'>\n              <div className='section-title'>\n                <h2>Get In Touch</h2>\n                <p>\n                  Please fill out the form below to send us an email and we will\n                  get back to you as soon as possible.\n                </p>\n              </div>\n              <form name='sentMessage' validate onSubmit={handleSubmit}>\n                <div className='row'>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='name'\n                        name='name'\n                        className='form-control'\n                        placeholder='Name'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='email'\n                        id='email'\n                        name='email'\n                        className='form-control'\n                        placeholder='Email'\n                        required\n                        onChange={handleChange}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n                </div>\n                <div className='form-group'>\n                  <textarea\n                    name='message'\n                    id='message'\n                    className='form-control'\n                    rows='4'\n                    placeholder='Message'\n                    required\n                    onChange={handleChange}\n                  ></textarea>\n                  <p className='help-block text-danger'></p>\n                </div>\n                <div id='success'></div>\n                <button type='submit' className='btn btn-custom btn-lg'>\n                  Send Message\n                </button>\n              </form>\n            </div>\n          </div> */}\n          <div className='col-md-12'>\n          <h3>Contact Info</h3>\n            {/* <div className='contact-item col-md-4'>\n              \n              <p>\n                <span>\n                  <i className='fa fa-map-marker'></i> Address\n                </span>\n                {props.data ? props.data.address : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item col-md-4'>\n              <p>\n                <span>\n                  <i className='fa fa-phone'></i> Phone\n                </span>{' '}\n                {props.data ? props.data.phone : 'loading'}\n              </p>\n            </div> */}\n            \n\n            <div\n              className=\"inline-container\"\n              style={validateText(message) ? {} : { color: 'red' }}\n              onMouseEnter={() => setIsActive(false)}\n              onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n            >\n              <a href={validateText(message) ? `mailto:${message}@penguinssoftware.com` : ''}>\n                <span>{message}</span>\n                <span>@penguinssoftware.com</span>\n              </a>\n          </div>\n\n\n\n          </div>\n          <div className='col-md-12'>\n            <div className='row'>\n              <div className='social'>\n                <ul>\n                  <li>\n                    <a href={props.data ? props.data.facebook : '/'}>\n                      <i className='fa fa-facebook'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.twitter : '/'}>\n                      <i className='fa fa-twitter'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.youtube : '/'}>\n                      <i className='fa fa-youtube'></i>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2021 Pegnuins Software LLC\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { Navigation } from './components/navigation.jsx'\nimport { Header } from './components/header.jsx'\nimport { Features } from './components/features.jsx'\n// import { About } from './components/about'\n// import { Services } from './components/services'\n// import { Gallery } from './components/gallery'\n// import { Testimonials } from './components/testimonials'\n// import { Team } from './components/Team'\nimport { Contact } from './components/contact.jsx'\nimport JsonData from './data/data.json'\nimport SmoothScroll from 'smooth-scroll'\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n})\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({})\n  useEffect(() => {\n    setLandingPageData(JsonData)\n  }, [])\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Features data={landingPageData.Features} />\n      {/* <About data={landingPageData.About} />\n      <Services data={landingPageData.Services} /> */}\n      {/* <Gallery />\n      <Testimonials data={landingPageData.Testimonials} />\n      <Team data={landingPageData.Team} /> */}\n      <Contact data={landingPageData.Contact} />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}